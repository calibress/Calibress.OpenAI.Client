using System.Collections.Generic;
using Calibress.OpenAI.Client.Interfaces;

namespace Calibress.OpenAI.Client.Objects;

/// <summary>
/// Represents a single choice generated by the API.
/// </summary>
public class TextChoice : Choice, ITextChoice
{
    /// <summary>
    /// The generated text for this choice.
    /// </summary>
    public string? Text { get; set; }

}

/// <summary>
/// Represents a single choice generated by the API.
/// </summary>
public abstract class Choice : IChoice
{
    /// <summary>
    /// The index of this choice, indicating its position among all generated choices.
    /// </summary>
    public int Index { get; set; }

    /// <summary>
    /// The log probabilities for each token in the generated text, if requested.
    /// </summary>
    public List<double>? Logprobs { get; set; }


    /// <summary>
    /// The reason why the generation was stopped, if applicable.
    /// </summary>
    public string? Finish_Reason { get; set; }
}



/// <summary>
/// Represents a message in a chat conversation.
/// </summary>
public class Message : IMessage
{
    /// <inheritdoc/>
    public int Index { get; set; }

    /// <inheritdoc/>
    public string? Role { get; set; }

    /// <inheritdoc/>
    public string? Content { get; set; }
}

/// <summary>
/// Represents a single choice for a chat completion response.
/// </summary>
public class ChatChoice : Choice, IChatChoice
{
    /// <summary>
    /// The message content for the chat completion choice.
    /// </summary>
    public Message? Message { get; set; }
}